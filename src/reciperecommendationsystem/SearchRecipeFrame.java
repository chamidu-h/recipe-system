/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package reciperecommendationsystem;


import java.awt.BorderLayout;
import java.awt.Font;
import java.sql.SQLException;
import java.util.List;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax. swing. *;


/**
 *
 * @author imcnb
 */
public class SearchRecipeFrame extends javax.swing.JFrame {

    /**
     * Creates new form SearchRecipeFrame
     */
    public SearchRecipeFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        IngredientsTextField = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstRecipes = new javax.swing.JList<>();
        SearchExitButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        IngredientsTable = new javax.swing.JTable();
        ClearFieldsButton = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1.setText("Enter Ingrediants");

        IngredientsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IngredientsTextFieldActionPerformed(evt);
            }
        });

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(lstRecipes);

        SearchExitButton.setText("Main Menu");
        SearchExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchExitButtonActionPerformed(evt);
            }
        });

        IngredientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Available Ingredients"
            }
        ));
        IngredientsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IngredientsTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(IngredientsTable);

        ClearFieldsButton.setText("Clear");
        ClearFieldsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClearFieldsButtonMouseClicked(evt);
            }
        });
        ClearFieldsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearFieldsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(108, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(IngredientsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ClearFieldsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(323, 323, 323))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(SearchExitButton)
                        .addGap(59, 59, 59))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(SearchExitButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IngredientsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClearFieldsButton)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(SearchButton)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(118, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        String ingredientsInput = IngredientsTextField.getText().trim();

    if (ingredientsInput.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter ingredients!", "Input Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    
    List<String> ingredients = Arrays.asList(ingredientsInput.split("\\s*,\\s*"));

    
    try {
        List<String> recipes = DatabaseConnection.getInstance().getRecipesByIngredientsWithWeights(ingredients);
        if (recipes.isEmpty()) {
            lstRecipes.setListData(new String[]{"No recipes found with the given ingredients."});
        } else {
            lstRecipes.setListData(recipes.toArray(new String[0]));
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error retrieving recipes: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_SearchButtonActionPerformed

    
    
    private void SearchExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchExitButtonActionPerformed
        this.dispose();
        
        MainFrame mainframe = new MainFrame();
        mainframe.setVisible(true);
    }//GEN-LAST:event_SearchExitButtonActionPerformed

    private void IngredientsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IngredientsTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IngredientsTextFieldActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        loadIngredientsTable();
        addRecipeListDoubleClickListener();
    }//GEN-LAST:event_formWindowOpened

    
    
    private void addIngredientToSearchField(String ingredient) {
    String currentText = IngredientsTextField.getText().trim();

    if (currentText.isEmpty()) {
        IngredientsTextField.setText(ingredient);
    } else {
        // Check if the ingredient is already added to avoid duplicates
        List<String> ingredientsList = Arrays.asList(currentText.split(",\\s*"));
        if (!ingredientsList.contains(ingredient)) {
            IngredientsTextField.setText(currentText + ", " + ingredient);
        }
    }
}

    
    private void IngredientsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IngredientsTableMouseClicked
        int selectedRow = IngredientsTable.getSelectedRow();
    if (selectedRow != -1) {
        String selectedIngredient = (String) IngredientsTable.getValueAt(selectedRow, 0);
        addIngredientToSearchField(selectedIngredient);
    }
    }//GEN-LAST:event_IngredientsTableMouseClicked

    private void ClearFieldsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearFieldsButtonActionPerformed
        IngredientsTextField.setText("");
    
    
    lstRecipes.setListData(new String[0]);
    }//GEN-LAST:event_ClearFieldsButtonActionPerformed

    private void ClearFieldsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearFieldsButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ClearFieldsButtonMouseClicked

    
    
    
    private void addRecipeListDoubleClickListener() {
    lstRecipes.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getClickCount() == 2) { 
                String selectedRecipe = lstRecipes.getSelectedValue();
                showRecipeDescription(selectedRecipe);
            }
        }
    });
}

private void showRecipeDescription(String recipeName) {
    try {
        String description = DatabaseConnection.getInstance().getRecipeDescription(recipeName);
        if (description != null) {
            
            JDialog dialog = new JDialog(this, "Recipe Details", true);
            dialog.setSize(400, 300);
            dialog.setLocationRelativeTo(this);
            dialog.setLayout(new BorderLayout());

            
            JPanel contentPanel = new JPanel(new BorderLayout(10, 10));
            contentPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

            
            JLabel nameLabel = new JLabel(recipeName);
            nameLabel.setFont(new Font("Arial", Font.BOLD, 18));
            nameLabel.setHorizontalAlignment(SwingConstants.CENTER);
            contentPanel.add(nameLabel, BorderLayout.NORTH);

            
            JTextArea descriptionArea = new JTextArea(description);
            descriptionArea.setLineWrap(true);
            descriptionArea.setWrapStyleWord(true);
            descriptionArea.setEditable(false);
            descriptionArea.setFont(new Font("Arial", Font.PLAIN, 14));
            descriptionArea.setBorder(BorderFactory.createTitledBorder("Description"));

            
            JScrollPane scrollPane = new JScrollPane(descriptionArea);
            contentPanel.add(scrollPane, BorderLayout.CENTER);

            
            JButton okButton = new JButton("OK");
            okButton.addActionListener(e -> dialog.dispose());
            JPanel buttonPanel = new JPanel();
            buttonPanel.add(okButton);

            
            dialog.add(contentPanel, BorderLayout.CENTER);
            dialog.add(buttonPanel, BorderLayout.SOUTH);

            
            dialog.setVisible(true);
        } else {
            
            JOptionPane.showMessageDialog(this, "No description found for the selected recipe.", "No Description", JOptionPane.WARNING_MESSAGE);
        }
    } catch (SQLException ex) {
        
        JOptionPane.showMessageDialog(this, "Error retrieving recipe description: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
}





        private void loadIngredientsTable() {
    DefaultTableModel model = (DefaultTableModel) IngredientsTable.getModel();
    model.setRowCount(0); 

    try {
        List<String> ingredients = DatabaseConnection.getInstance().getAllIngredients();
        for (String ingredient : ingredients) {
            model.addRow(new Object[]{ingredient});
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error loading ingredients: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
    }
        
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchRecipeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchRecipeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchRecipeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchRecipeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchRecipeFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearFieldsButton;
    private javax.swing.JTable IngredientsTable;
    private javax.swing.JTextField IngredientsTextField;
    private javax.swing.JButton SearchButton;
    private javax.swing.JButton SearchExitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JList<String> lstRecipes;
    // End of variables declaration//GEN-END:variables
}
